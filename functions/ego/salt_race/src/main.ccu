$py(
from lib.races import *
from lib.floo_network import SALT_RACE

# all races must have a race object

race = CheckpointRace(SALT_RACE,
    fill_air=Coords("468 6 -31 468 6 -35")
)


race.add_place(Coords("459 13 -35 459 14 -35"))
race.add_fill(Coords("459 11 -35"), "redstone_block")

race.add_place(Coords("459 13 -33 459 14 -33"))
race.add_fill(Coords("459 11 -33"), "redstone_block")

race.add_place(Coords("459 13 -31 459 14 -31"))
race.add_fill(Coords("459 11 -31"), "redstone_block")


# select, teleport
race.set_spawn(Coords("460 7 -35 468 10 -31"), Coords("472 8 -33 -90 20"))

race.add_checkpoint(Coords("489 10 -34 491 13 -32"), Coords("490 11 -33 180 20"))
race.add_checkpoint(Coords("450 15 -44 452 18 -42"), Coords("451 16 -43 90 20"))
race.add_checkpoint(Coords("422 11 -34 424 15 -32"), Coords("423 12 -33 -90 20"))
)

# additional commands for scoreboard initialization
$macro(edit_scoreboard_start)
$endmacro

# additional commands for the main start
$macro(edit_main_start)
$endmacro

# additional commands for the main clock
$macro(edit_main_clock)
$endmacro

$macro(add_functions)
$endmacro

# additional commands for the countdown clock
$macro(edit_countdown_clock)
    @s[$(initials)cd=120] fill $(race.fill_air) stonebrick 0 replace redstone_block 0
    $# @s[$(initials)cd=120] fill $(race.fill_block) redstone_block 0 replace stonebrick 0
$endmacro

# additional commands for the main end
$macro(edit_main_end)
    fill $(race.fill_air) redstone_block 0 replace stonebrick 0
    $# fill $(race.fill_block) stonebrick 0 replace redstone_block 0
$endmacro


$macro(edit_detect_tp)
    @a[gSA=1,m=2,team=$(team_name)] ifblock ~ ~-1.3 ~ hay_block -1 function teleport_back
$endmacro

$include("lib/races.ccu")
