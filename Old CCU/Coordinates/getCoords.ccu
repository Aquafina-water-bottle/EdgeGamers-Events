//(Coordinates to scoreboard)
CCU.isImport(Coordinates/getCoords)

IMPORT {LIBRARY GETDIR v2/1.12/General}
IMPORT {LIBRARY v2/1.12/Coordinates/getCoords.ccu}

//==
Ideas from:
	For getting the Y coordinates and teleporting
	King Cat: https://www.youtube.com/channel/UCwTnzVfIIvN_a8mYOvTfAcA
	Video: https://youtu.be/gYEa0NGvgHY
	
	For getting the X and Z coordinates
	DoubleJGames: https://www.reddit.com/r/Minecraft/comments/6id4k0/112_coordinate_finder_function/
	Download: https://www.dropbox.com/s/ws9snxe6q7pfpck/coordDetect.zip?dl=0
=//

//=
OPTIONS:
	parseOption true
	commandOption true
	combinerOption true
	filePathFuncOption C:\Users\Austin\Documents\Austin\powder game code\eGO\Server Stuff\1.12.1\world\data\functions\french_man
	deleteFunctionFolderOption true
		
FUNC {ACTIVATE CCU.coordinates.getCoords() ARGS}:
	DEF GLOBAL $CCUgetCoordsObjX$ CCUCDpx
	DEF GLOBAL $CCUgetCoordsObjY$ CCUCDpy
	DEF GLOBAL $CCUgetCoordsObjZ$ CCUCDpz
	DEF GLOBAL $CCUgetCoordsObjTPX$ CCUCDtx
	DEF GLOBAL $CCUgetCoordsObjTPY$ CCUCDty
	DEF GLOBAL $CCUgetCoordsObjTPZ$ CCUCDtz
	DEF GLOBAL $CCUgetCoordsObjStats$ CCUCDst
	DEF GLOBAL $CCUgetCoordsFolderName$ coordinates
	DEF GLOBAL $CCUgetCoordsConst$ Number

	ARRAY GLOBAL {Arr_CCUGetCoordsCloudTags}:
		CCUGetCoordsCloud
=//

//<Initialize
FUNC {CCU.coordinates.getCoords}:
	ARGS()
	UNASSIGN {FUNC ARGS}
	
	IF {$CCUgetCoordsObjX$ = `$CCUgetCoordsObjX$`}:
		PRINT $CCUgetCoordsObjX$ under CCU.coordinates.getCoords will default to CCUCDpx
		DEF GLOBAL $CCUgetCoordsObjX$ CCUCDpx
	
	IF {$CCUgetCoordsObjY$ = `$CCUgetCoordsObjY$`}:
		PRINT $CCUgetCoordsObjY$ under CCU.coordinates.getCoords will default to CCUCDpy
		DEF GLOBAL $CCUgetCoordsObjY$ CCUCDpy
	
	IF {$CCUgetCoordsObjZ$ = `$CCUgetCoordsObjZ$`}:
		PRINT $CCUgetCoordsObjZ$ under CCU.coordinates.getCoords will default to CCUCDpz
		DEF GLOBAL $CCUgetCoordsObjZ$ CCUCDpz
	
	IF {$CCUgetCoordsObjTPX$ = `$CCUgetCoordsObjTPX$`}:
		PRINT $CCUgetCoordsObjTPX$ under CCU.coordinates.getCoords will default to CCUCDtx
		DEF GLOBAL $CCUgetCoordsObjTPX$ CCUCDtx
	
	IF {$CCUgetCoordsObjTPY$ = `$CCUgetCoordsObjTPY$`}:
		PRINT $CCUgetCoordsObjTPY$ under CCU.coordinates.getCoords will default to CCUCDty
		DEF GLOBAL $CCUgetCoordsObjTPY$ CCUCDty
	
	IF {$CCUgetCoordsObjTPZ$ = `$CCUgetCoordsObjTPZ$`}:
		PRINT $CCUgetCoordsObjTPZ$ under CCU.coordinates.getCoords will default to CCUCDtz
		DEF GLOBAL $CCUgetCoordsObjTPZ$ CCUCDtz
	
	IF {$CCUgetCoordsObjStats$ = `$CCUgetCoordsObjStats$`}:
		PRINT $CCUgetCoordsObjStats$ under CCU.coordinates.getCoords will default to CCUCDst
		DEF GLOBAL $CCUgetCoordsObjStats$ CCUCDst
	
	IF {Arr_CCUGetCoordsCloudTags[S] = `Arr_CCUGetCoordsCloudTags[S]`}:
		PRINT Arr_CCUGetCoordsCloudTags under CCU.coordinates.getCoords will default to CCUGetCoordsCloud
		ARRAY {GLOBAL Arr_CCUGetCoordsCloudTags}:
			CCUGetCoordsCloud
	
	IF {$CCUgetCoordsFolderName$ = `$CCUgetCoordsFolderName$`}:
		PRINT $CCUgetCoordsFolderName$ under CCU.coordinates.getCoords will default to coordinates
		DEF GLOBAL $CCUgetCoordsFolderName$ coordinates
	
	IF {$CCUgetCoordsConst$ = `$CCUgetCoordsConst$`}:
		PRINT $CCUgetCoordsConst$ under CCU.coordinates.getCoords will default to Number
		DEF GLOBAL $CCUgetCoordsConst$ Number
//>

//<Calculating variables
	///	calculating the first tag
	DEF $CCUFirstTagCalc$ Arr_CCUGetCoordsCloudTags[0]

	/// worldborder radius
	DEF $CCUWorldBorderRadius$ 30000000

	/// Calculating the biggest power of 2 required for ($CCUWorldBorderRadius$ * 2)
	CCU.getBinaryExponent($CCUWorldBorderRadius$ * 2)
	DEF $CCUMaxPowerX$ $CCUCalcBinaryExponent$
	DEF $CCUMaxPowerY$ 12 /// 4096
	DEF $CCUMaxPowerZ$ $CCUCalcBinaryExponent$

	///	To make sure that coordinates are placed correctly
	DEF $CCURelativeX$ ~|0| ~ ~
	DEF $CCURelativeY$ ~ ~|0| ~
	DEF $CCURelativeZ$ ~ ~ ~|0|
//>

//<Minecraft Functions
	///	A branch is used for $CCUgetCoordsFolderName$
	MFUNC {BRANCH $CCUgetCoordsFolderName$ init MFunc_Init}:
		ARRAY {GLOBAL ACTIVATE CCU.objectiveAdd(Obj_GeneralScoreboardStart) Obj_GeneralScoreboardStart}:
			$CCUgetCoordsObjX$ dummy getCoords X
			$CCUgetCoordsObjY$ dummy getCoords Y
			$CCUgetCoordsObjZ$ dummy getCoords Z
			$CCUgetCoordsObjTPX$ dummy getCoords Tele X
			$CCUgetCoordsObjTPY$ dummy getCoords Tele Y
			$CCUgetCoordsObjTPZ$ dummy getCoords Tele Z
			$CCUgetCoordsObjStats$ dummy getCoords Stats
			
		ARRAY {ACTIVATE CCU.setConstants($CCUgetCoordsConst$) ARGS}:
			-1
			
	///	teleports relative to the given player as the score number
	///	uses a binary search to do so
		LOOP {X;Y;Z}:
			MFUNC {teleport_pos|0| MFunc_TPPos|0|}:
				LOOP {(2 ^ $CCUMaxPower|0|$) 1 / 2}:
					@s[$CCUgetCoordsObjTP|0;1|$>=|0|] tp @s $CCURelative|0;1|$(|0|)
					@s[$CCUgetCoordsObjTP|0;1|$>=|0|] $CCUgetCoordsObjTP|0;1|$ - |0|
					
			MFUNC {teleport_neg|0| MFunc_TPNeg|0|}:
				LOOP {(2 ^ $CCUMaxPower|0|$) 1 / 2}:
					@s[$CCUgetCoordsObjTP|0;1|$<=-|0|] tp @s $CCURelative|0;1|$(-|0|)
					@s[$CCUgetCoordsObjTP|0;1|$<=-|0|] $CCUgetCoordsObjTP|0;1|$ + |0|

	///	specifically for the Y value, stats entity must be used
	//=	how this works:
		-summons area_effect_cloud, adds stats to SuccessCount
		-Adds player to $CCUgetCoordsObjStats$, and will reset later to prevent mismatching
		-uses a binary search to teleport the area_effect_cloud to the max height, which is 4096
		-normally, the cloud cannot teleport past 4096, it gets the total distance between the player and 4096
		-it then minuses the entire score by 4096 and multiplies by -1
		-kills area_effect_cloud and resets $CCUgetCoordsObjStats$
	=//

		MFUNC {get_posY MFunc_GetY}:
			@s $CCUgetCoordsObjY$ = 0
			summon area_effect_cloud ~ ~ ~ {Duration:5,Tags:[;
			CCU.scoreboardTags(Arr_CCUGetCoordsCloudTags)
			]}
			
			@s $CCUgetCoordsObjStats$ + 0
			stats entity @e[type=area_effect_cloud,$CCUFirstTagCalc$] set SuccessCount @e[c=1,$CCUgetCoordsObjStats$>=0] $CCUgetCoordsObjStats$
			
			LOOP {(2 ^ $CCUMaxPowerY$) 1 / 2}:
				@e[$CCUFirstTagCalc$] tp @s ~ ~|0| ~
				@s[$CCUgetCoordsObjStats$>=1] $CCUgetCoordsObjY$ + |0|
			
			@s $CCUgetCoordsObjY$ - 4096
			@s reset $CCUgetCoordsObjStats$
			ScOP @s $CCUgetCoordsObjY$ *= -1 Number
			
			kill @e[type=area_effect_cloud,$CCUFirstTagCalc$]
			
	///	specifically for the X and Z value, a simple execute can be used
	//=	how this works:
		-summons area_effect_cloud and does a calc value function on it
		-uses a binary search to teleport the area_effect_cloud to the max X/Z distance, which is 30000000
		-instead of teleporting, it executes at the given X or Z distance to see if it can run a command there
		-it will eventually get the full distance the player is away from the worldborder
		-it then minuses the entire score by (30000000 - 1) and multiplies by -1
		-kills area_effect_cloud
	=//
		LOOP {X;Z}:
			MFUNC {get_pos|0| MFunc_Get|0|}:
				@s $CCUgetCoordsObj|0|$ = 0
				summon area_effect_cloud ~ ~ ~ {Duration:5,Tags:[;
				CCU.scoreboardTags(Arr_CCUGetCoordsCloudTags)
				]}
				
			///	a new function is called to use @s instead of @e as much as possible
				@e[type=area_effect_cloud,$CCUFirstTagCalc$] MFunc_Calc|0|
				MFUNC {calc_pos|0| MFunc_Calc|0|}:
					LOOP {(2 ^ $CCUMaxPower|0|$) 1 / 2}:
						@s $CCURelative|0;1|$(|0|) @s $CCUgetCoordsObj|0;1|$ + |0|
						@s $CCURelative|0;1|$(|0|) tp @s $CCURelative|0;1|$(|0|)
					
					@s $CCUgetCoordsObj|0|$ - CALC($CCUWorldBorderRadius$ - 1)
					ScOP @s $CCUgetCoordsObj|0|$ *= -1 Number
				
				ScOP @s $CCUgetCoordsObj|0|$ = @e[type=area_effect_cloud,$CCUFirstTagCalc$] $CCUgetCoordsObj|0|$
				kill @e[type=area_effect_cloud,$CCUFirstTagCalc$]

		MFUNC {teleport MFunc_Teleport}:	
			LOOP {X;Y;Z}:
				@e[$CCUgetCoordsObjTP|0|$>=1] MFunc_TPPos|0|
				@e[$CCUgetCoordsObjTP|0|$<=-1] MFunc_TPNeg|0|
		
		
		MFUNC {display_coords MFunc_DispCoords}:
			MFunc_GetX
			MFunc_GetY
			MFunc_GetZ
			/*
			title @s actionbar {"text":"","extra":[
				{"text":"X --> ","color":"gold"},
				{"score":{"name":"@s","objective":"$CCUgetCoordsObjX$"},"color":"green"},
				{"text":" Y --> ","color":"gold"},
				{"score":{"name":"@s","objective":"$CCUgetCoordsObjY$"},"color":"green"},
				{"text":" Z --> ","color":"gold"},
				{"score":{"name":"@s","objective":"$CCUgetCoordsObjZ$"},"color":"green"}
			]}
			*/
			
		MFUNC {uninstall MFunc_Uninstall}:
			CCU.objectiveRemove(Obj_GeneralScoreboardStart)

	UNASSIGN {DEF $CCUFirstTagCalc$}
	UNASSIGN {DEF $CCUWorldBorderRadius$}
	UNASSIGN {DEF $CCUCalcBinaryExponent$}
	UNASSIGN {DEF $CCUMaxPowerX$}
	UNASSIGN {DEF $CCUMaxPowerY$}
	UNASSIGN {DEF $CCUMaxPowerZ$}
	UNASSIGN {DEF $CCURelativeX$}
	UNASSIGN {DEF $CCURelativeY$}
	UNASSIGN {DEF $CCURelativeZ$}
//>






